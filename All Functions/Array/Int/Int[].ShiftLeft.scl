FUNCTION "Int[].ShiftLeft" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      places : DInt;   // must be positive
   END_VAR

   VAR_IN_OUT 
      data : Array[*] of Int;
   END_VAR

   VAR_TEMP 
      i : DInt;
      size : DInt;
   END_VAR


BEGIN
	REGION "PRE CONDITION"
	    IF #places <= 0 THEN
	        RETURN;
	    END_IF;
	END_REGION
	
	
	REGION "GET SIZE"    
	    #size := UDINT_TO_DINT("Int[].CountOfElements"(#data));
	END_REGION
	
	
	REGION "FILL CONDITION"
	    IF #places >= #size THEN
	        "Int[].Fill"(value := 0,
	                         data := #data);
	        RETURN;
	    END_IF;
	    
	END_REGION
	
	
	REGION "SHIFT"
	    FOR #i := 0 TO #size - 1 DO
	        // pre condition
	        IF #i + #places > #size - 1 THEN
	            EXIT;
	        END_IF;
	        // shift
	        #data[#i] := #data[#i + #places];
	    END_FOR;
	END_REGION
	
	
	REGION "CORRECT DUPLICATION"
	FOR #i := (#size - 1) TO (#size - #places) DO
	        #data[#i] := 0;
	    END_FOR;
	END_REGION
	
	
	REGION "RETURN"
	    RETURN;
	END_REGION
END_FUNCTION

